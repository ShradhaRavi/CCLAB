mapper.java

package earthquake;
import java.io.IOException;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;

public class mapper extends MapReduceBase implements Mapper<LongWritable,Text,Text,DoubleWritable>
{
public void map(LongWritable key, Text value,OutputCollector<Text,DoubleWritable> values, Reporter r) throws IOException
{
String[] line=value.toString().split(",",12);
if (line.length!=12)
{
System.out.println("- "+line.length);
return;
}
String outputKey=line[11]; \\region name
String outputValue=Double.parseDouble(line[8]); \\magnitude or any other value that you need
values.collect(new Text(outputKey),new DoubleWritable(outputValue));
}}

reducer.java

package earthquake;
import java.io.IOException;
import java.util.Iterator;
import java.io.*;
import.java.mapred.*;

public class reducer extends MapReduceBase implements Mapper<Text,DoubleWritabel,Text, DoubleWritable>
{
public void reduce(Text key,Iterator<DoubleWritable> value1, OutputCollector<Text,DoubleWritable> values, Reporter r) throws IOException
{
int maxvalue=Integer.MIN_VALUE;
while(value1.hasNext())
{
maxvalue=Math.max(maxvalue,value1.next().get())
}
values.collet(key,new DoubleWritable(maxvalue));
}}