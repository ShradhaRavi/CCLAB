mapper.java 

package averagesalary;
import java.io.IOException;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;

public class mapper extends MapReduceBase implements Mapper<LongWritable, Text,Text,FloatWritable>
{
public void map(LongWritable key,Text value,OutputCollector<Text,FloatWritable> values, Reporter r) throws IOException
{
String[] line=value.toString().split("\\t");
String sex=line[3];
Float salary=Float.parseFloat(line[8]);
values.collect(new Text(sex),new FloatWritable(salaray));
}}

reducer.java 

package avaragesalary;
import java.io.IOException;
import java.util.Iterator;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;

public class reducer extends MapReduceBase implements Reducer<Text, FloatWritable,Text,Text>
{
public void map(Text key,Iterator<FloatWritable> value1,OutputCollector<Text,Text> values, Reporter r) throws IOException
{
Float total=0.0f;
int count=0;
while(value1.hasNext())
{
total+=value1.next().get();
count++;
}
float avg=total/(float)count;
String outputValue="Total="+total+"and Avg="+avg;
values.collect(key,new Text(outputValue));
}}